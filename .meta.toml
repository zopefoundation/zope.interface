# Generated from:
# https://github.com/zopefoundation/meta/tree/master/config/c-code
[meta]
template = "c-code"
commit-id = "3ddccc7a1430600364f48f37e4f24a275e1bbb85"

[python]
with-appveyor = true
with-pypy = true
with-legacy-python = true
with-docs = false
with-sphinx-doctests = false

[tox]
use-flake8 = false
additional-envlist = [
    "docs",
    ]
testenv-commands = [
    "coverage run -p -m unittest discover -s src",
    ]
testenv-deps = [
    ]
testenv-setenv = [
    "ZOPE_INTERFACE_STRICT_IRO=1",
    ]
testenv-additional = [
    "",
    "[testenv:docs]",
    "basepython = python3",
    "# Until repoze.sphinx.autointerface supports Sphinx 4.x we cannot use it:",
    "deps =",
    "    Sphinx < 4",
    "    coverage",
    "extras = docs",
    "commands =",
    "    sphinx-build -b html -d docs/_build/doctrees docs docs/_build/html",
    "    coverage run -p -m sphinx -b doctest -d docs/_build/doctrees docs docs/_build/doctest",
    ]
coverage-command = "coverage combine"
coverage-additional = [
    "depends = py27,py27-pure,py35,py35-pure,py36,py36-pure,py37,py37-pure,py38,py38-pure,py39,py39-pure,pypy,pypy3,docs",
    "parallel_show_output = true",
    ]

[coverage]
fail-under = 99

[manifest]
additional-rules = [
    "include *.cmd",
    "include *.sh",
    "include *.yml",
    "include .coveragerc",
    "recursive-include benchmarks *.py",
    "recursive-include docs *.bat",
    "recursive-include docs *.py",
    "recursive-include docs *.rst",
    "recursive-include docs Makefile",
    ]

[check-manifest]
additional-ignores = [
    "docs/_build/doctest/output.txt",
    "docs/_build/html/_sources/*",
    "docs/_build/html/_sources/api/*",
    ]

[github-actions]
additional-install = [
    "- name: Install zope.interface",
    "  # ``python -m unittest discover`` only works with editable",
    "  # installs, so we have to duplicate some work and can't",
    "  # install the built wheel. (zope.testrunner",
    "  # works fine with non-editable installs.)",
    "  run: |",
    "    pip install -U wheel",
    "    pip install -U coverage",
    "    pip install -U 'faulthandler; python_version == \"2.7\" and platform_python_implementation == \"CPython\"'",
    "    # Unzip into src/ so that testrunner can find the .so files",
    "    # when we ask it to load tests from that directory. This",
    "    # might also save some build time?",
    "    unzip -n dist/zope.interface-*whl -d src",
    "    pip install -U -e .[test]",
    "- name: Run tests and report coverage",
    "  # Once with C extensions, once without. Yes, this runs them",
    "  # twice on PyPy.",
    "  run: |",
    "    coverage run -p -m unittest discover -s src",
    "    PURE_PYTHON=1 coverage run -p -m unittest discover -s src",
    "    coverage combine",
    "    coverage report --ignore-errors --show-missing",
    ]

[appveyor]
global-env-vars = [
    "global:",
    "  TWINE_USERNAME: zope.wheelbuilder",
    "  TWINE_PASSWORD:",
    "    secure: UcdTh6W78cRLVGfKRFoa5A==",
    ]
build-script = [
    "- python -W ignore setup.py -q bdist_wheel",
    ]
test-steps = [
    "- python -m unittest discover -s src",
    ]
additional-lines = [
    "artifacts:",
    "  - path: 'dist\\*.whl'",
    "    name: wheel",
    "",
    "deploy_script:",
    "  - ps: if ($env:APPVEYOR_REPO_TAG -eq $TRUE) { pip install twine; twine upload --skip-existing dist/* }",
    "",
    "deploy: on",
    ]
